networks:
  net_link:
    name: url-shortener-network
    driver: bridge

services:
  db_mongo:
    image: mongo:8.0
    container_name: url-shortener-db
    networks:
      - net_link
    hostname: ${API_MONGODB_HOSTNAME:-url-shortener-db}
    command:
      - --replSet
      - ${MONGODB_REPLICA_SET:-rs0}
      - --bind_ip_all
      - --port
      - ${MONGODB_PORT:-27017}
      # todo: add auth
    ports:
      - "${MONGODB_HOST_PORT:-27017}:${MONGODB_PORT:-27017}"
    environment:
      - MONGODB_DATABASE=${API_MONGODB_DATABASE:-url-shortener}
      - MONGODB_PORT=${API_MONGODB_PORT:-27017}
      - MONGODB_REPLICA_SET=${API_MONGODB_REPLICA_SET:-rs0}
      - GLIBC_TUNABLES=glibc.pthread.rseq=0 # Memory allocator
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'${MONGODB_REPLICA_SET:-rs0}',members:[{_id:0,host:'host.docker.internal:${MONGODB_PORT:-27017}'}]}) }" | mongosh --port ${MONGODB_PORT:-27017} --quiet
      interval: 10s       # Check frequently
      timeout: 10s        # Quick timeout for ping
      start_period: 0s    # Initial delay
      start_interval: 5s  # Quick checks during startup
      retries: 30         # Few retries for quick failure detection
    volumes:
      - "./db-mongo/data:/data/db"
    restart: on-failure

  api:
    image: url-shortener/api
    container_name: url-shortener-api
    networks:
      - net_link
    build:
      context: ../../ # We have to have access to the parent config files (tsconfig.json)
      dockerfile: ./apps/api/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-prd}
        PORT: ${API_PORT:-3000}
    hostname: ${API_HOSTNAME:-url-shortener-api}
    ports:
      - "${API_HOST_PORT:-3000}:${API_PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-prd}
      - WEB_PUBLIC_HOST=${WEB_PUBLIC_HOST:-http://localhost:3000}
      - API_PORT=${API_PORT:-3000}
      - API_MONGODB_PORT=${API_MONGODB_PORT:-27017}
      - API_MONGODB_HOSTNAME=${API_MONGODB_HOSTNAME:-url-shortener-db}
      - API_MONGODB_DATABASE=${API_MONGODB_DATABASE:-url-shortener}
      - API_MONGODB_REPLICA_SET=${API_MONGODB_REPLICA_SET:-rs0}
      - API_MONGODB_WITH_MIGRATION=${API_MONGODB_WITH_MIGRATION:-off}
      - API_IOC_DEBUG=${API_IOC_DEBUG:-off}
      - API_LOG_ENABLED=${API_LOG_ENABLED:-on}
      - API_LOG_LEVEL=${API_LOG_LEVEL:-info}
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 10s       # Check frequently
      timeout: 3s         # Quick timeout for ping
      start_period: 10s   # Initial delay
      start_interval: 5s  # Quick checks during startup
      retries: 5          # Few retries for quick failure detection
    volumes:
      - ./bin/entrypoint.sh:/docker-entrypoint/entrypoint.sh:ro
      - ./bin/healthcheck.sh:/usr/local/bin/healthcheck.sh:ro
      - ./src:/app/src
    depends_on:
      db_mongo:
        condition: service_healthy
    restart: unless-stopped

